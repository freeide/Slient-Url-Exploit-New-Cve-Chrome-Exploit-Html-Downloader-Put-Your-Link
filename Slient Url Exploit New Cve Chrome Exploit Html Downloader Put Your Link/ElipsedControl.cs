using System;
using System.ComponentModel;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Windows.Forms;

namespace PlayStation_Checker_by_Halo
{
	// Token: 0x02000014 RID: 20
	internal class ElipsedControl : Component
	{
		// Token: 0x17000027 RID: 39
		// (get) Token: 0x060000F4 RID: 244 RVA: 0x0000C750 File Offset: 0x0000A950
		// (set) Token: 0x060000F5 RID: 245 RVA: 0x0000257B File Offset: 0x0000077B
		public Control TargetControl
		{
			get
			{
				return this._cntrl;
			}
			set
			{
				this._cntrl = value;
				this._cntrl.SizeChanged += delegate(object <p0>, EventArgs <p1>)
				{
					this._cntrl.Region = Region.FromHrgn(ElipsedControl.CreateRoundRectRgn(0, 0, this._cntrl.Width, this._cntrl.Height, this._CornerRadius, this._CornerRadius));
				};
			}
		}

		// Token: 0x17000028 RID: 40
		// (get) Token: 0x060000F6 RID: 246 RVA: 0x0000C768 File Offset: 0x0000A968
		// (set) Token: 0x060000F7 RID: 247 RVA: 0x0000C780 File Offset: 0x0000A980
		public int CornerRadius
		{
			get
			{
				return -this.CornerRadius;
			}
			set
			{
				this._CornerRadius = value;
				if (this._cntrl != null)
				{
					this._cntrl.Region = Region.FromHrgn(ElipsedControl.CreateRoundRectRgn(0, 0, this._cntrl.Width, this._cntrl.Height, this._CornerRadius, this._CornerRadius));
				}
			}
		}

		// Token: 0x060000F8 RID: 248
		[DllImport("Gdi32.dll")]
		private static extern IntPtr CreateRoundRectRgn(int nLeftRect, int nTopRect, int nRightRect, int nBoottomRect, int nWidthEllipse, int nHeightElipse);

		// Token: 0x0400010D RID: 269
		private Control _cntrl;

		// Token: 0x0400010E RID: 270
		private int _CornerRadius = 30;
	}
}
