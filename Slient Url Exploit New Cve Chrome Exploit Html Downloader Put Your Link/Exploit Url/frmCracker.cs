using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Runtime.InteropServices;
using System.Windows.Forms;
using System.Xml.Serialization;
using Bunifu.Framework.UI;
using SkinSoft.VisualStyler;
using SkinSoft.VisualStyler.Licensing;

namespace PlayStation_Checker_by_Halo
{
	// Token: 0x02000017 RID: 23
	public partial class frmCracker : Form
	{
		// Token: 0x1700002F RID: 47
		// (get) Token: 0x0600010E RID: 270 RVA: 0x00002660 File Offset: 0x00000860
		protected override CreateParams CreateParams
		{
			get
			{
				CreateParams createParams = base.CreateParams;
				createParams.ClassStyle |= 196608;
				return createParams;
			}
		}

		// Token: 0x0600010F RID: 271
		[DllImport("user32.dll")]
		public static extern int SendMessage(IntPtr hWnd, int Msg, int wParam, int lParam);

		// Token: 0x06000110 RID: 272
		[DllImport("user32.dll")]
		public static extern bool ReleaseCapture();

		// Token: 0x06000111 RID: 273 RVA: 0x0000267A File Offset: 0x0000087A
		public frmCracker()
		{
			this.InitializeComponent();
			ControlsLink.GetLink().GloalTimerLabel = this.timer_lbl;
			ControlsLink.GetLink().MainForm = this;
			base.FormBorderStyle = FormBorderStyle.None;
			Control.CheckForIllegalCrossThreadCalls = false;
		}

		// Token: 0x06000112 RID: 274 RVA: 0x000026B0 File Offset: 0x000008B0
		private void PictureBox1_Click(object sender, EventArgs e)
		{
			base.Close();
		}

		// Token: 0x06000113 RID: 275 RVA: 0x000026B8 File Offset: 0x000008B8
		private void PictureBox2_Click(object sender, EventArgs e)
		{
			base.WindowState = FormWindowState.Minimized;
		}

		// Token: 0x06000114 RID: 276 RVA: 0x000026B8 File Offset: 0x000008B8
		private void PictureBox2_Click_1(object sender, EventArgs e)
		{
			base.WindowState = FormWindowState.Minimized;
		}

		// Token: 0x06000115 RID: 277 RVA: 0x000026C1 File Offset: 0x000008C1
		private void Form1_Load(object sender, EventArgs e)
		{
			this.BunifuFlatButton4_Click(null, null);
			this.userControl31.Visible = true;
		}

		// Token: 0x06000116 RID: 278 RVA: 0x000026D7 File Offset: 0x000008D7
		public void BunifuFlatButton1_Click(object sender, EventArgs e)
		{
			this.userControl11.Hide();
			this.userControl11.Show();
			this.userControl11.BringToFront();
		}

		// Token: 0x06000117 RID: 279 RVA: 0x000026FA File Offset: 0x000008FA
		private void BunifuFlatButton2_Click(object sender, EventArgs e)
		{
			this.userControl21.Hide();
			this.userControl21.Show();
			this.userControl21.BringToFront();
		}

		// Token: 0x06000118 RID: 280 RVA: 0x0000271D File Offset: 0x0000091D
		private void BunifuFlatButton4_Click(object sender, EventArgs e)
		{
			this.userControl31.Hide();
			this.userControl31.Show();
			this.userControl31.BringToFront();
		}

		// Token: 0x06000119 RID: 281 RVA: 0x00002740 File Offset: 0x00000940
		private void Panel_MouseDown(object sender, MouseEventArgs e)
		{
			if (e.Button == MouseButtons.Left)
			{
				frmCracker.ReleaseCapture();
				frmCracker.SendMessage(base.Handle, 161, 2, 0);
			}
		}

		// Token: 0x0600011A RID: 282 RVA: 0x0000CACC File Offset: 0x0000ACCC
		private void FrmCracker_FormClosing(object sender, FormClosingEventArgs e)
		{
			try
			{
				Session o = new Session((int)ControlsLink.GetLink().Settings.Thread_num.Value, (int)ControlsLink.GetLink().Settings.update_nu.Value, ControlsLink.GetLink().Settings.ProxyLink_tb.Text, ControlsLink.GetLink().Settings.Bot_token_ID_tb.Text);
				using (FileStream fileStream = new FileStream(Application.StartupPath + "\\LastSession.xml", FileMode.Create, FileAccess.Write))
				{
					new XmlSerializer(typeof(Session)).Serialize(fileStream, o);
				}
				Application.Exit();
			}
			catch (Exception)
			{
				MessageBox.Show("Error saving last session!", "Error saving session", MessageBoxButtons.OK, MessageBoxIcon.Hand);
			}
			Process.GetCurrentProcess().Kill();
		}

		// Token: 0x0600011B RID: 283 RVA: 0x0000CBB8 File Offset: 0x0000ADB8
		private void ShowResult_pb_Click(object sender, EventArgs e)
		{
			try
			{
				if (!File.Exists(Cracker.AutoSavePath))
				{
					Process.Start(Cracker.AutoSavePath);
				}
				else
				{
					MessageBox.Show("Please start a operation at first for see the results!", "Result foolder not found!", MessageBoxButtons.OK, MessageBoxIcon.Hand);
				}
			}
			catch (Exception ex)
			{
				MessageBox.Show(ex.Message, "Result foolder not found!", MessageBoxButtons.OK, MessageBoxIcon.Hand);
			}
		}

		// Token: 0x0600011C RID: 284 RVA: 0x0000276A File Offset: 0x0000096A
		private void SensorLeacher_btn_Click(object sender, EventArgs e)
		{
			this.userControlLeecher.Hide();
			this.userControlLeecher.Show();
			this.userControlLeecher.BringToFront();
		}

		// Token: 0x04000117 RID: 279
		public const int WM_NCLBUTTONDOWN = 161;

		// Token: 0x04000118 RID: 280
		public const int HT_CAPTION = 2;
	}
}
